<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="MyApps.CanvasPlay.CanvasPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyApps.CanvasPlay"
    xmlns:common="using:MyApps.CanvasPlay.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <common:BooleanNegationConverter x:Key="BooleanNegationConverter" />
        <common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:TimeSpanToStringConverter x:Key="TimespanToStringConverter" />
        <local:ColorBrushConverter x:Key="ColorBrushConverter" />
        
        <Style x:Key="EditToolPopupStyle" TargetType="Popup">
            <Setter Property="IsLightDismissEnabled" Value="True" />
            <Setter Property="ChildTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <PaneThemeTransition Edge="Top" />
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="IsLightDismissEnabled" Value="{Binding Path=IsChecked, ElementName=editToolPanel_PinButton, Converter={StaticResource BooleanNegationConverter}}">
            </Setter>
        </Style>

        <Style x:Key="EditToolPopupBorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource ApplicationForegroundThemeBrush}" />
            <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Padding" Value="20" />
        </Style>

    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

       
        <!-- Main -->
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <Viewbox>
                <Border x:Name="canvasBorder" BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" BorderThickness="1">
                    <local:CanvasControl x:Name="MainCanvas" Width="1366" Height="768" 
                        StrokeColor="{Binding Color.Color, ElementName=strokeColorPicker}"
                        BackgroundColor="{Binding Color.Color, ElementName=backgroundColorPicker}"
                                         />
                </Border>
            </Viewbox>
        </Grid>

        <!-- Color Picker for stroke -->
        <Popup x:Name="strokeColorPickerPopup" Style="{StaticResource EditToolPopupStyle}">
            <Border Style="{StaticResource EditToolPopupBorderStyle}" Loaded="colorPickerPopup_Border_Loaded">
                <local:ColorPicker x:Name="strokeColorPicker" 
                                   Title="{Binding Source={StaticResource MyResource}, Path=[CanvasPageEditToolsPanelStrokeColorButton], Mode=OneTime}"
                                   CloseButtonClicked="colorPicker_CloseButtonClicked" />
            </Border>
        </Popup>

        <!-- Color Picker for background -->
        <Popup x:Name="backgroundColorPickerPopup" Style="{StaticResource EditToolPopupStyle}" >
            <Border Style="{StaticResource EditToolPopupBorderStyle}" Loaded="colorPickerPopup_Border_Loaded">
                <local:ColorPicker x:Name="backgroundColorPicker" 
                                   Title="{Binding Source={StaticResource MyResource}, Path=[CanvasPageEditToolsPanelBackgroundColorButton], Mode=OneTime}"
                                   CloseButtonClicked="colorPicker_CloseButtonClicked" />
            </Border>
        </Popup>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="canvasBorder" Storyboard.TargetProperty="BorderThickness">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <!-- BottomAppBar -->
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="bottomAppBarPlayPanel" Storyboard.TargetProperty="(Grid.Row)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="bottomAppBarPlayPanel" Storyboard.TargetProperty="(Grid.Column)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>

                        <!-- TopAppBar -->
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="topAppBarEditToolPanel" Storyboard.TargetProperty="(Grid.Row)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="topAppBarEditToolPanel" Storyboard.TargetProperty="(Grid.Column)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="topAppBarCameraButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="topAppBarOpenFileButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>

                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    
    <common:LayoutAwarePage.TopAppBar>
        <!-- Back button and page title -->
        <AppBar 
            IsSticky="{Binding Path=IsChecked, ElementName=editToolPanel_PinButton}"
            Loaded="TopAppBar_Loaded" Unloaded="TopAppBar_Unloaded" >
            <Grid Margin="20, 20, 20, 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
                <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{Binding Path=DisplayName}" Style="{StaticResource PageHeaderTextStyle}"/>

                <!-- Edit Panel
                    (Sticky)
                    Stroke Color
                    Background Color
                    Remove All Strokes
                -->
                <StackPanel x:Name="topAppBarEditToolPanel" 
                            Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Right" 
                            Orientation="Horizontal"
                            Visibility="{Binding Path=IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <Button
                        x:Name="topAppBarOpenFileButton"
                        Style="{StaticResource OpenFileAppBarButtonStyle}" 
                        AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[CanvasPageEditToolsPanelOpenFileButton]}" 
                        Click="EditToolsPanel_OpenFileButton_Click" />
                    
                    <Button
                        x:Name="topAppBarCameraButton"
                        Style="{StaticResource PhotoAppBarButtonStyle}" 
                        AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[CanvasPageEditToolsPanelCameraButton]}" 
                        Click="EditToolsPanel_CameraButton_Click" />

                    <Button
                        Style="{StaticResource AppBarButtonStyle}" 
                        Content="&#xE20D;"
                        AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[CanvasPageEditToolsPanelBackgroundColorButton]}" 
                        Click="EditToolsPanel_BackgroundColorButton_Click" />
                    
                    <Button
                        Style="{StaticResource EditAppBarButtonStyle}" 
                        AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[CanvasPageEditToolsPanelStrokeColorButton]}" 
                        Click="EditToolsPanel_StrokeColorButton_Click" />

                    <ToggleButton
                        x:Name="editToolPanel_PinButton"
                        Style="{StaticResource PinAppBarButtonStyle}" 
                        AutomationProperties.Name="" 
                        Click="EditToolsPanel_PinButton_Click" />
                </StackPanel>
            </Grid>
        </AppBar>
    </common:LayoutAwarePage.TopAppBar>
    
    <common:LayoutAwarePage.BottomAppBar>
        <AppBar Loaded="BottomAppBar_Loaded" Unloaded="BottomAppBar_Unloaded">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <!-- Row:1= Save, Clear -->
                <StackPanel x:Name="bottomAppBarEditPanel" Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                    <ToggleButton 
                        Style="{StaticResource EditAppBarButtonStyle}" 
                        AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[CanvasPageAppBarEditModeButton]}" 
                        IsChecked="{Binding Path=IsEditing, Mode=OneWay}"
                        IsEnabled="{Binding Path=IsPlaying, Converter={StaticResource BooleanNegationConverter}}"
                        Click="EditModeButton_Click" />
                    <Button 
                        Style="{StaticResource SaveAppBarButtonStyle}" 
                        AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[CanvasPageAppBarSaveButton]}" 
                        IsEnabled="{Binding Path=IsPlaying, Converter={StaticResource BooleanNegationConverter}}"
                        Click="SaveButton_Click" />
                    <Button 
                        Style="{StaticResource NoAppBarButtonStyle}" 
                        AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[CanvasPageAppBarCancelButton]}" 
                        IsEnabled="{Binding Path=IsPlaying, Converter={StaticResource BooleanNegationConverter}}"
                        Click="CancelButton_Click" />
                </StackPanel>

                <!-- Row:2= Play, Stop, Progress -->
                <StackPanel x:Name="bottomAppBarPlayPanel" Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <Button 
                        Style="{StaticResource PlayAppBarButtonStyle}" 
                        AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[CanvasPageAppBarPlayButton]}" 
                        IsEnabled="{Binding Path=IsPlaying, Converter={StaticResource BooleanNegationConverter}}"
                        Click="PlayButton_Click" />
                    <Button 
                        Style="{StaticResource StopAppBarButtonStyle}" 
                        AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[CanvasPageAppBarStopButton]}" 
                        IsEnabled="{Binding Path=IsPlaying}"
                        Click="StopButton_Click" />

                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="50" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="{Binding Path=CurrentPlayTime, Converter={StaticResource TimespanToStringConverter}}" Style="{StaticResource BasicTextStyle}" />
                        <TextBlock Grid.Column="1" Text="/" Margin="10, 0"  Style="{StaticResource BasicTextStyle}" />
                        <TextBlock Grid.Column="2" Text="{Binding Path=Item.InputRecorder.TotalDuration, Converter={StaticResource TimespanToStringConverter}}" Style="{StaticResource BasicTextStyle}"/>
                    </Grid>
                </StackPanel>
            </Grid>
        </AppBar>
    </common:LayoutAwarePage.BottomAppBar>
</common:LayoutAwarePage>
