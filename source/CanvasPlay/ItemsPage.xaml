<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="MyApps.CanvasPlay.ItemsPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyApps.CanvasPlay"
    xmlns:common="using:MyApps.CanvasPlay.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- このページで表示されるアイテムのコレクション -->
        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Items}"
            />

        <!-- GridView用 -->
        <DataTemplate x:Key="MyCanvasItemTemplate">
            <Grid Width="250" Height="150"
                Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <!--<Image Source="{Binding Path=ThumbnailBitmapImage}" 
                       Grid.Column="0"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Margin="15,0,0,0"
                       Width="100"/>-->
                <TextBlock Text="{Binding DisplayName}" 
                           Grid.Column="1"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" 
                           Style="{StaticResource TitleTextStyle}" 
                           Margin="15,0,15,0"/>
            </Grid>
        </DataTemplate>

        <!-- ListView用 -->
        <DataTemplate x:Key="MyCanvasItemListViewTemplate">
            <Grid Width="250" Height="150"
                Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <!--<Image Source="{Binding Path=ThumbnailBitmapImage}" 
                       Grid.Column="0"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Margin="15,0,0,0"
                       Width="100"/>-->
                <TextBlock Text="{Binding DisplayName}" 
                           Grid.Column="1"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" 
                           Style="{StaticResource TitleTextStyle}" 
                           Margin="15,0,15,0"/>
            </Grid>
        </DataTemplate>

        <common:BooleanNegationConverter x:Key="BooleanNegationConverter" />
        <common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    </Page.Resources>

    <!--
        このグリッドは 2 つの行を定義するページのルート パネルとして機能します:
        * 行 0 には [戻る] ボタンおよびページ タイトルが含まれます
        * 行 1 には残りのページ レイアウトが含まれます
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- ほとんどのビューステートで使用される水平スクロール グリッド-->
        <GridView
            x:Name="itemGridView"
            AutomationProperties.AutomationId="ItemsGridView"
            AutomationProperties.Name="Items"
            TabIndex="1"
            Grid.RowSpan="2"
            Padding="116,136,116,46"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            ItemTemplate="{StaticResource MyCanvasItemTemplate}"
            SelectionMode="Multiple"
            IsSwipeEnabled="True"
            IsItemClickEnabled="True"
            ItemClick="ItemView_ItemClick"
            SelectionChanged="ItemsView_SelectionChanged"/>

        <!-- スナップの場合のみ使用される垂直スクロール リスト -->
        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemsListView"
            AutomationProperties.Name="Items"
            TabIndex="1"
            Grid.Row="1"
            Visibility="Collapsed"
            Margin="0,-10,0,0"
            Padding="10,0,0,60"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            ItemTemplate="{StaticResource MyCanvasItemListViewTemplate}"
            SelectionMode="Multiple"
            IsSwipeEnabled="True"
            IsItemClickEnabled="True"
            ItemClick="ItemView_ItemClick"
            SelectionChanged="ItemsView_SelectionChanged"/>

        <ProgressBar
            Grid.RowSpan="2"
            IsIndeterminate="True" 
            Visibility="{Binding Path=ItemsChanging, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, ElementName=pageRoot}"/>
        
        <!-- [戻る] ボタンおよびページ タイトル-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{Binding Source={StaticResource MyResource}, Path=[AppName]}" IsHitTestVisible="false" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!--表示状態には、アプリケーションのビューステートが反映されます -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- ページ全体では、縦方向に対して、より狭い 100 ピクセルの余白の規則を優先します -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="96,136,86,56"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    スナップの場合、[戻る] ボタンとタイトルには異なるスタイルが使用され、他のすべてのビューステートで表示されるグリッドに対して
                    一覧の表現が置き換えられます
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>

                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="appbarExportButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="appbarImportButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>-->
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

    <common:LayoutAwarePage.BottomAppBar>
        <!--<AppBar Loaded="BottomAppBar_Loaded" Unloaded="BottomAppBar_Unloaded">-->
            <CommandBar
                IsEnabled="{Binding Path=ItemsChanging, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}"
                Loaded="BottomAppBar_Loaded">
            <!--<StackPanel Orientation="Horizontal">-->
                <!-- New, Play, Edit, Delete -->
                <!--<Button 
                    x:Name="AppBarAddButton" 
                    Style="{StaticResource AddAppBarButtonStyle}" 
                    AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarAddButton]}" 
                    Click="AddButton_Click"  />-->
                <AppBarButton
                    Icon="Add"
                    Label="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarAddButton]}" 
                    Click="AddButton_Click" />
                <!--<Button 
                    x:Name="AppBarPlayButton"
                    Style="{StaticResource PlayAppBarButtonStyle}" 
                    AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarPlayButton]}" 
                    IsEnabled="{Binding Path=ItemsSelected, Mode=OneWay}"
                    Click="PlayButton_Click" />-->
                <AppBarButton
                    Icon="Play"
                    Label="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarPlayButton]}" 
                    IsEnabled="{Binding Path=ItemsSelected, Mode=OneWay}"
                    Click="PlayButton_Click" />
                <!--<Button 
                    Style="{StaticResource EditAppBarButtonStyle}" 
                    AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarEditButton]}" 
                    IsEnabled="{Binding Path=ItemsSelected, Mode=OneWay}"
                    Click="EditButton_Click" />-->
                <AppBarButton
                    Icon="Edit"
                    Label="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarEditButton]}" 
                    IsEnabled="{Binding Path=ItemsSelected, Mode=OneWay}"
                    Click="EditButton_Click" />
                <!--<Button 
                    Style="{StaticResource DeleteAppBarButtonStyle}" 
                    AutomationProperties.Name="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarDeleteButton]}" 
                    IsEnabled="{Binding Path=ItemsSelected, Mode=OneWay}"
                    Click="DeleteButton_Click" />-->
                <AppBarButton
                    Icon="Delete"
                    Label="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarDeleteButton]}" 
                    IsEnabled="{Binding Path=ItemsSelected, Mode=OneWay}"
                    Click="DeleteButton_Click" />

            <AppBarSeparator />
            <AppBarButton 
                    x:Name="appbarExportButton"
                    Icon="Save" 
                    Label="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarExportButton]}" 
                    IsEnabled="{Binding Path=ItemsSelected, Mode=OneWay}"
                    Click="ExportButton_Click"  />
                <AppBarButton 
                    x:Name="appbarImportButton"
                    Icon="OpenFile" 
                    Label="{Binding Source={StaticResource MyResource}, Path=[ItemsPageAppBarImportButton]}"
                    Click="ImportButton_Click" />
            </CommandBar>
            <!--</StackPanel>-->
        <!--</AppBar>-->
    </common:LayoutAwarePage.BottomAppBar>
</common:LayoutAwarePage>
